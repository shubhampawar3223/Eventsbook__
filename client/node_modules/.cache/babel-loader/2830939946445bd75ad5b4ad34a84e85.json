{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"; // import { Redirect } from \"react-router-dom\";\n//Register the user\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"./api/users/register\", userData).then(res => history.push(\"/login\")) //redirect to login on successful register\n  .catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nvar email;\nexport const loginUser = userData => dispatch => {\n  axios.post(\"./api/users/login\", userData).then(res => {\n    //Save to local storage\n    //Set token to local storage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); //Set token to auth header\n\n    setAuthToken(token); //Decode token to get user data\n\n    const decoded = jwt_decode(token); //Set current user\n\n    dispatch(setCurrentUser(decoded));\n    email = userData.email;\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const userProfile = (profileData, history) => dispatch => {\n  axios.put(\"./api/users/profile\" + email).then(res => history.push(\"/dashboard\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const getProfile = (getData, history) => dispatch => {\n  axios.get(\"./api/users/profile/email/\" + email).then(res => history.push(\"/profile\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; //Login - Get user token\n//Set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; //User Loading\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n}; //Log user out\n\nexport const logoutUser = () => dispatch => {\n  //Remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); //Remove auth header for future requests\n\n  setAuthToken(false); //Set current user to empty object {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["C:/Users/DELL3542/eventbook/EvenstBook/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","email","loginUser","token","localStorage","setItem","decoded","setCurrentUser","userProfile","profileData","put","getProfile","getData","get","setUserLoading","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"./types\"\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\n//Register the user\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"./api/users/register\", userData)\r\n        .then(res => history.push(\"/login\")) //redirect to login on successful register\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        ); \r\n};\r\n\r\nvar email;\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post(\"./api/users/login\", userData)\r\n        .then(res => {\r\n            //Save to local storage\r\n            //Set token to local storage\r\n            const { token } = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n            //Set token to auth header\r\n            setAuthToken(token);\r\n            //Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            //Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n            email=userData.email;\r\n        })\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const userProfile = (profileData, history) => dispatch => {\r\n    axios\r\n        .put(\"./api/users/profile\"+ email)\r\n        .then(res => history.push(\"/dashboard\"))\r\n        .catch(err => \r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );    \r\n};\r\n\r\nexport const getProfile = (getData, history) => dispatch => {\r\n    axios\r\n        .get(\"./api/users/profile/email/\"+ email)\r\n        .then(res => history.push(\"/profile\"))\r\n        .catch(err => \r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );    \r\n};\r\n\r\n//Login - Get user token\r\n\r\n\r\n//Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    };\r\n};\r\n\r\n//User Loading\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING\r\n    };\r\n};\r\n\r\n//Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    //Remove token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    //Remove auth header for future requests\r\n    setAuthToken(false);\r\n    //Set current user to empty object {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};"]},"metadata":{},"sourceType":"module"}